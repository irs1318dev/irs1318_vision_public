plugins
{
    id "java"
    id "application"
    id "edu.wpi.first.GradleRIO" version "2024.1.1"
    id 'edu.wpi.first.WpilibTools' version '1.3.0'
}

repositories
{
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()
}

wpilibTools.deps.wpilibVersion = wpi.versions.wpilibVersion.get()

def nativeConfigName = 'wpilibNatives'
def nativeConfig = configurations.create(nativeConfigName)

def nativeTasks = wpilibTools.createExtractionTasks {
    configurationName = nativeConfigName
}

nativeTasks.addToSourceSetResources(sourceSets.main)
//nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpimath")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpinet")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("wpiutil")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("ntcore")
nativeConfig.dependencies.add wpilibTools.deps.wpilib("cscore")
nativeConfig.dependencies.add wpilibTools.deps.wpilibOpenCv("frc" + wpi.frcYear.get(), wpi.versions.opencvVersion.get())

String opencvJar = System.getenv('OPENCV_JAR')
String apriltagJar = System.getenv('APRILTAG_JAR')
dependencies
{
    // WPILib and its dependencies:
    implementation wpilibTools.deps.wpilibJava("wpiutil")
    //implementation wpilibTools.deps.wpilibJava("wpimath")
    implementation wpilibTools.deps.wpilibJava("wpinet")
    implementation wpilibTools.deps.wpilibJava("ntcore")
    implementation wpilibTools.deps.wpilibJava("cscore")
    implementation wpilibTools.deps.wpilibJava("cameraserver")
    implementation wpilibTools.deps.wpilibOpenCvJava("frc" + wpi.frcYear.get(), wpi.versions.opencvVersion.get())

    implementation group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: wpi.versions.jacksonVersion.get()
    implementation group: "com.fasterxml.jackson.core", name: "jackson-core", version: wpi.versions.jacksonVersion.get()
    implementation group: "com.fasterxml.jackson.core", name: "jackson-databind", version: wpi.versions.jacksonVersion.get()

    implementation group: "org.ejml", name: "ejml-simple", version: wpi.versions.ejmlVersion.get()
    implementation group: "us.hebi.quickbuf", name: "quickbuf-runtime", version: wpi.versions.quickbufVersion.get();

    // Our dependencies
    implementation files(opencvJar)
    implementation files(apriltagJar)
    implementation "net.samuelcampos:usbdrivedetector:2.1.1"

    testImplementation "org.mockito:mockito-all:1.10.19"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
}

test {
    useJUnitPlatform()
    workingDir = "."
    systemProperty "java.library.path", System.getenv('OPENCV_LIB')
}


mainClassName = 'frc1318.vision.Program'

// Setting up my Jar File (build everything into it as a "fat JAR").
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'irs1318_vision',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName
    }

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

wrapper {
    gradleVersion = '8.5'
}
